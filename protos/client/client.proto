syntax = "proto3";

import "common/rustproto.proto";

option (rustproto.carllerche_bytes_for_bytes_all) = true;

message Scalar {
    oneof value {
        bytes bytes = 1;
        sint64 int = 2;
    }
}

message Value {
    oneof value {
        bytes bytes = 1;
        sint64 int = 2;
        ScalarArray set = 3;
    }
}

message ScalarArray {
    repeated Scalar scalars = 1;
}

message Error {
    enum Code {
        INTERNAL = 0;
    }

    Code code = 1;
}

message GetRequest {
    bytes key = 1;
}

message GetResult {
    Value value = 1;
}

message GetResponse {
    oneof body {
        Error error = 1;
        GetResult result = 2;
    }
}

message DeleteRequest {
    bytes key = 1;
}

message DeleteResult {
    bool did_delete = 1;
}

message DeleteResponse {
    oneof body {
        Error error = 1;
        DeleteResult result = 2;
    }
}

message SetRequest {
    message Condition {
        oneof value {
            bool exists = 1;
            Value equals = 2;
        }
    }

    bytes key = 1;
    Value value = 2;
    Condition condition = 3;
}

message SetResult {
    bool did_set = 1;
}

message SetResponse {
    oneof body {
        Error error = 1;
        SetResult result = 2;
    }
}

message SetAddRequest {
    bytes key = 1;
    repeated Scalar members = 2;
}

message SetAddResult {}

message SetAddResponse {
    oneof body {
        Error error = 1;
        SetAddResult result = 2;
    }
}

message SetRemoveRequest {
    bytes key = 1;
    repeated Scalar members = 2;
}

message SetRemoveResult {}

message SetRemoveResponse {
    oneof body {
        Error error = 1;
        SetRemoveResult result = 2;
    }
}

message MapSetRequest {
    bytes key = 1;
    Scalar field = 2;
    Value value = 3;
    Scalar order = 4;
}

message MapSetResult {}

message MapSetResponse {
    oneof body {
        Error error = 1;
        MapSetResult result = 2;
    }
}

message MapDeleteRequest {
    bytes key = 1;
    Scalar field = 2;
}

message MapDeleteResult {
    bool did_delete = 1;
}

message MapDeleteResponse {
    oneof body {
        Error error = 1;
        MapDeleteResult result = 2;
    }
}

message Bound {
    oneof value {
        Scalar included = 1;
        Scalar excluded = 2;
    }
}

message GetMapRangeRequest {
    bytes key = 1;
    Bound start = 2;
    Bound end = 3;
    bool reverse = 4;
    uint32 limit = 5;
}

message GetMapRangeResult {
    repeated Value values = 1;
}

message GetMapRangeResponse {
    oneof body {
        Error error = 1;
        GetMapRangeResult result = 2;
    }
}

message GetMapRangeByFieldRequest {
    bytes key = 1;
    Bound start = 2;
    Bound end = 3;
    bool reverse = 4;
    uint32 limit = 5;
}

message GetMapRangeByFieldResult {
    repeated Value values = 1;
}

message GetMapRangeByFieldResponse {
    oneof body {
        Error error = 1;
        GetMapRangeByFieldResult result = 2;
    }
}

service Service {
    rpc get(GetRequest) returns (GetResponse);
    rpc set(SetRequest) returns (SetResponse);
    rpc delete(DeleteRequest) returns (DeleteResponse);
    rpc set_add(SetAddRequest) returns (SetAddResponse);
    rpc set_remove(SetRemoveRequest) returns (SetRemoveResponse);
    rpc map_set(MapSetRequest) returns (MapSetResponse);
    rpc map_delete(MapDeleteRequest) returns (MapDeleteResponse);
    rpc get_map_range(GetMapRangeRequest) returns (GetMapRangeResponse);
    rpc get_map_range_by_field(GetMapRangeByFieldRequest) returns (GetMapRangeByFieldResponse);
}
